---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import {
	githubIcon,
	metadata,
	metadataIcon,
	metadataItem,
	title,
	titleWrapper,
	wrapper,
} from './GithubRepo.css';

interface Props {
	repoName: string;
}

const { repoName } = Astro.props;

let repo: unknown;

if (repoName?.length) {
	try {
		const response = await fetch(`https://api.github.com/repos/${repoName}`, {
			referrerPolicy: 'no-referrer',
			headers: {
				authorization: 'Bearer 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',
			},
		});
		repo = await response.json();
	} catch (error) {
		console.error(error);
	}
} else {
	repo = null;
}
---
<a class={wrapper} href={repo?.html_url} target="_blank">
	{repo ?
		<>
			<div class={titleWrapper}>
				<div class={title}>
					<img src={repo?.owner?.avatar_url} alt="Repo Owner" height={20} width={20} />

					<h4>{repo?.owner?.login} / {repo?.name}</h4>
				</div>

				<Icon name="logos:github-icon" class={githubIcon} />
			</div>

			<p>
				{repo?.description?.replace(/:[a-zA-Z0-9_]+:/g, '')}
			</p>

			<div class={metadata}>
				<div class={metadataItem}>
					<Icon name="material-symbols:star-outline" class={metadataIcon} />
					{Intl.NumberFormat('en-us', {
						notation: 'compact',
						maximumFractionDigits: 1
					}).format(repo?.stargazers_count)?.replaceAll('\u202f', '')}
				</div>

				<div class={metadataItem}>
					<Icon name="material-symbols:call-split" class={metadataIcon} />
					{Intl.NumberFormat('en-us', {
						notation: 'compact',
						maximumFractionDigits: 1
					}).format(repo?.forks)?.replaceAll('\u202f', '')}
				</div>

				<div class={metadataItem}>
					<Icon name="material-symbols:balance" class={metadataIcon} />
					{(repo?.license?.spdx_id) ? repo?.license?.spdx_id : 'no-license'}
				</div>
			</div>
		</> :
		<div>
			<Icon name="svg-spinners:3-dots-bounce"/>
		</div>
	}
</a>