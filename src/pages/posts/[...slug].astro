---
import { type CollectionEntry, getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import BaseLayout from '../../components/layout/BaseLayout/BaseLayout.astro';
import PostContent from '../../components/posts/PostContent/PostContent.astro';
import { getSortedPosts } from '../../utils/content-utils';
import { formatDate } from '../../utils/date-utils';

export const getStaticPaths = (async () => {
	const posts = await getSortedPosts({ isDraft: true });

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}) satisfies GetStaticPaths;

interface Props {
	post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;

const jsonLd = {
	'@context': 'https://schema.org',
	'@type': 'BlogPosting',
	headline: post.data.title,
	description: post.data.subtitle || post.data.title,
	keywords: post.data.tags,
	author: {
		'@type': 'Person',
		name: 'Dor Sharon',
		url: Astro.site,
	},
	datePublished: formatDate(post.data.publishDate),
};
---

<BaseLayout title={post.data.title}>
	<script
		slot="head"
		type="application/ld+json"
		set:html={JSON.stringify(jsonLd)}
	/>

	<PostContent post={post} />
</BaseLayout>
